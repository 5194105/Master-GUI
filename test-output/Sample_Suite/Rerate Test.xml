<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="SQA-CRS-021" ignored="0" name="Rerate Test" tests="4" failures="4" timestamp="05 Jun 2020 19:37:02 GMT" time="0.047" errors="0">
  <testcase name="@BeforeClass setupExcel" time="0.0" classname="rerate.rerateTestNgSlow">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;allCheckBox&amp;apos; is required by BeforeClass on method setupExcel but has not been marked @Optional or defined
">
      <![CDATA[org.testng.TestNGException: 
Parameter 'allCheckBox' is required by BeforeClass on method setupExcel but has not been marked @Optional or defined

	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
... Removed 7 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass setupExcel -->
  <testcase name="testMethod" time="0.0" classname="rerate.rerateTestNgSlow">
    <failure type="org.testng.TestNGException" message="
Data Provider public synchronized java.lang.Object[][] rerate.rerateTestNgSlow.dataProviderMethod1() must return either Object[][] or Iterator&amp;lt;Object&amp;gt;[], not class [[Ljava.lang.Object;">
      <![CDATA[org.testng.TestNGException: 
Data Provider public synchronized java.lang.Object[][] rerate.rerateTestNgSlow.dataProviderMethod1() must return either Object[][] or Iterator<Object>[], not class [[Ljava.lang.Object;
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
... Removed 7 stack frames]]>
    </failure>
  </testcase> <!-- testMethod -->
  <testcase name="testMethod4" time="0.0" classname="rerate.rerateTestNgSlow">
    <failure type="org.testng.TestNGException" message="
Data Provider public synchronized java.lang.Object[][] rerate.rerateTestNgSlow.dataProviderMethod4() must return either Object[][] or Iterator&amp;lt;Object&amp;gt;[], not class [[Ljava.lang.Object;">
      <![CDATA[org.testng.TestNGException: 
Data Provider public synchronized java.lang.Object[][] rerate.rerateTestNgSlow.dataProviderMethod4() must return either Object[][] or Iterator<Object>[], not class [[Ljava.lang.Object;
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
... Removed 7 stack frames]]>
    </failure>
  </testcase> <!-- testMethod4 -->
  <testcase name="testMethod3" time="0.0" classname="rerate.rerateTestNgSlow">
    <failure type="org.testng.TestNGException" message="
Data Provider public synchronized java.lang.Object[][] rerate.rerateTestNgSlow.dataProviderMethod3() must return either Object[][] or Iterator&amp;lt;Object&amp;gt;[], not class [[Ljava.lang.Object;">
      <![CDATA[org.testng.TestNGException: 
Data Provider public synchronized java.lang.Object[][] rerate.rerateTestNgSlow.dataProviderMethod3() must return either Object[][] or Iterator<Object>[], not class [[Ljava.lang.Object;
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
... Removed 7 stack frames]]>
    </failure>
  </testcase> <!-- testMethod3 -->
  <testcase name="testMethod2" time="0.0" classname="rerate.rerateTestNgSlow">
    <failure type="org.testng.TestNGException" message="
Data Provider public synchronized java.lang.Object[][] rerate.rerateTestNgSlow.dataProviderMethod2() must return either Object[][] or Iterator&amp;lt;Object&amp;gt;[], not class [[Ljava.lang.Object;">
      <![CDATA[org.testng.TestNGException: 
Data Provider public synchronized java.lang.Object[][] rerate.rerateTestNgSlow.dataProviderMethod2() must return either Object[][] or Iterator<Object>[], not class [[Ljava.lang.Object;
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
... Removed 7 stack frames]]>
    </failure>
  </testcase> <!-- testMethod2 -->
</testsuite> <!-- Rerate Test -->
